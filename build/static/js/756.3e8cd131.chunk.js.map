{"version":3,"file":"static/js/756.3e8cd131.chunk.js","mappings":"yKAIA,MAAMA,EAAOC,IAAoD,IAAnD,GAACC,EAAE,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAI,QAACC,GAASN,EACzD,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAOF,QAASA,IAAMA,EAAQL,GAAIQ,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKC,IAAKT,EAAUU,IAAI,OAAOJ,UAAU,gBACzCD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEN,KAC5BO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAEL,KAC1BM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAEJ,WAGxB,EA6FV,EAzFuBQ,KACrB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAK/BG,EAAeL,EAAKG,QAAOG,IAC/B,OAAQH,GACN,IAAK,WAQL,QACE,OAAO,EAPT,IAAK,UACH,MAAqB,YAAdG,EAAKf,KACd,IAAK,UACL,IAAK,UACL,IAAK,UACH,OAAOe,EAAKf,OAASY,EAGzB,KAIFI,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,MAAM,GAADC,OAAIC,EAAAA,EAAO,YAAY,CACjDC,OAAQ,MACRC,QAAS,CACP,gBAAiB,cAGrB,IAAKL,EAASM,GACZ,MAAM,IAAIC,MAAM,+BAElB,MAAMC,QAAaR,EAASS,OAC5BjB,EAAQgB,EACV,CAAE,MAAOE,GACPC,QAAQD,MAAM,iDAAkDA,EAClE,GAGFE,EAAW,GACV,IACH,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE9B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAiB8B,MAAO,CAACC,QAAQ,OAAOC,eAAe,UAAU/B,SAjDpE,CAAC,WAAY,UAAW,UAAW,UAAW,WAkD/CgC,KAAKC,IACZhC,EAAAA,EAAAA,KAAA,UAEE4B,MAAO,CACLK,gBAAiB1B,IAAWyB,EAAI,QAAU,cAC1CE,MAAO3B,IAAWyB,EAAI,QAAU,QAChCG,OAAQ,kBACRC,QAAS,WACTC,OAAQ,QACRC,aAAc,MACdC,OAAQ,UACRC,UAAU,OACVC,WAAW,OAEb7C,QAASA,IAAMY,EAAUwB,GAAGjC,SAE3BiC,GAdIA,QAkBXhC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5BU,EAAasB,KAAI,CAACrB,EAAMgC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC5B9C,EAAAA,EAAAA,KAACX,EAAI,CAEHG,UAAqB,QAAXmD,EAAAjC,EAAKqC,cAAM,IAAAJ,GAAK,QAALC,EAAXD,EAAc,UAAE,IAAAC,OAAL,EAAXA,EAAkBI,YAAa,kCACzCvD,MAAOiB,EAAKjB,MACZC,SAAwB,QAAfmD,EAAAnC,EAAKuC,kBAAU,IAAAJ,GAAK,QAALC,EAAfD,EAAkB,UAAE,IAAAC,OAAL,EAAfA,EAAsBI,iBAAkB,wBACjDvD,KAAMe,EAAKf,MAAQ,oBACnBC,QAASA,KAAMuD,OAnCJ5D,EAmCgBmB,EAAKnB,QAlCxCmC,EAAS,YAADX,OAAaxB,IADFA,KAmC0B,GALhCmD,EAML,QAGF,C,kCCtGV,MACA,EADgB,uB","sources":["Componets/MobaileScreen/NewsMobaileCard.jsx","baseUrl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../css/MobaileScreenCard.css\"; // Ensure this CSS file exists and styles your cards appropriately\nimport { useNavigate } from 'react-router-dom';\nimport baseUrl from '../../baseUrl';\nconst Card = ({id, imageSrc, title, content, time,onClick }) => {\n  return (\n    <div className=\"card\" onClick={() => onClick(id)}>\n      <img src={imageSrc} alt=\"Card\" className=\"card-image\" />\n      <div className=\"card-content\">\n        <h1 className=\"card-title\">{title}</h1>\n        <p className=\"card-text\">{content}</p>\n        <div className=\"card-footer\">\n          <span className=\"time\">{time}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst NewsMobileCard = () => {\n  const [news, setNews] = useState([]);\n  const [filter, setFilter] = useState('all'); // 'all', 'category1', 'category2', etc.\n  const filters = ['Trending', 'Topic 1', 'Topic 2', 'Topic 3', 'Topic 4'];\n \n\n  \n  const filteredNews = news.filter(item => {\n    switch (filter) {\n      case 'Trending':\n        return true;\n      case 'Topic 1':\n        return item.time === 'Topic 1'; // Assuming 'Just now' is a distinct value\n      case 'Topic 2':\n      case 'Topic 3':\n      case 'Topic 4':\n        return item.time === filter; // This assumes the item's time property matches the filter exactly\n      default:\n        return true;\n    }\n  });\n\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/content`, {\n          method: \"GET\",\n          headers: {\n            \"Cache-Control\": \"no-cache\",\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setNews(data);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n\n    fetchNews();\n  }, []);\n  const navigate = useNavigate();\n\n  const handleClick = (id) => {\n    navigate(`/details/${id}`);\n  };\n\n  return (\n    <div>\n      <div className=\"filter-buttons\" style={{display:'flex',justifyContent:'center'}}>\n        {filters.map((f) => (\n          <button\n            key={f}\n            style={{\n              backgroundColor: filter === f ? 'green' : 'transparent', // Change button color if active\n              color: filter === f ? 'black' : 'white', // Text color\n              border: '1px solid white',\n              padding: '6px 10px',\n              margin: '0 4px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              marginTop:'10px',\n              fontWeight:'600'\n            }}\n            onClick={() => setFilter(f)}\n          >\n            {f}\n          </button>\n        ))}\n      </div>\n      <div className=\"card-container\">\n        {filteredNews.map((item, index) => (\n          <Card\n            key={index}\n            imageSrc={item.images?.[0]?.image_url || 'https://via.placeholder.com/150'}\n            title={item.title}\n            content={item.paragraphs?.[0]?.paragraph_text || 'No content available.'}\n            time={item.time || 'No time available'} // Display the item's time\n            onClick={() => handleClick(item.id)} // Assuming each item has a unique 'id' for navigation\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NewsMobileCard;\n","//const baseUrl = \"https://ideaverse-server-v1-yhti.onrender.com\";\n\nconst baseUrl = \"http://localhost:8000\";\nexport default baseUrl;"],"names":["Card","_ref","id","imageSrc","title","content","time","onClick","_jsxs","className","children","_jsx","src","alt","NewsMobileCard","news","setNews","useState","filter","setFilter","filteredNews","item","useEffect","async","response","fetch","concat","baseUrl","method","headers","ok","Error","data","json","error","console","fetchNews","navigate","useNavigate","style","display","justifyContent","map","f","backgroundColor","color","border","padding","margin","borderRadius","cursor","marginTop","fontWeight","index","_item$images","_item$images$","_item$paragraphs","_item$paragraphs$","images","image_url","paragraphs","paragraph_text","handleClick"],"sourceRoot":""}