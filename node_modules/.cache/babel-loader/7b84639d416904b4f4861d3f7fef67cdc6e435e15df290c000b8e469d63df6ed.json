{"ast":null,"code":"var _jsxFileName = \"/Users/rajeevkumar/Desktop/news/client/src/Componets/Other/NewsAriticalPage.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArticlePage = ({\n  title,\n  titleImage,\n  paragraphs,\n  images\n}) => {\n  // Combine paragraphs and images into a single array\n  let contentItems = [...paragraphs];\n  images.forEach(image => {\n    // Find the position where the image should be inserted\n    let position = contentItems.findIndex(item => item.order > image.order);\n    if (position === -1) {\n      // If no such position exists, push to the end\n      contentItems.push({\n        ...image,\n        type: 'image'\n      });\n    } else {\n      // Otherwise, splice the image into the correct position\n      contentItems.splice(position, 0, {\n        ...image,\n        type: 'image'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    style: styles.articleContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), titleImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      style: styles.image,\n      src: titleImage.image_url,\n      alt: \"Title visual representation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), contentItems.map((item, index) => {\n      if (item.paragraph_text) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.paragraph,\n          children: item.paragraph_text\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      } else if (item.image_url) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          style: styles.image,\n          src: item.image_url,\n          alt: `Content image ${index + 1}`\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      } else {\n        return null;\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles should be defined here as in your initial setup\n_c = ArticlePage;\nArticlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n  titleImage: PropTypes.shape({\n    image_url: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n  }).isRequired,\n  paragraphs: PropTypes.arrayOf(PropTypes.shape({\n    paragraph_text: PropTypes.string.isRequired,\n    order: PropTypes.number.isRequired,\n    _id: PropTypes.string.isRequired\n  })).isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    image_url: PropTypes.string.isRequired,\n    order: PropTypes.number.isRequired,\n    _id: PropTypes.string.isRequired\n  })).isRequired\n};\n\n// Example usage\nconst ArticlePageRoute = () => {\n  // Fetch articleData from the database or state management\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ArticlePage, {\n      title: articleData.title,\n      titleImage: articleData.title_image,\n      paragraphs: articleData.paragraphs,\n      images: articleData.images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ArticlePageRoute;\nexport default ArticlePageRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"ArticlePage\");\n$RefreshReg$(_c2, \"ArticlePageRoute\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","ArticlePage","title","titleImage","paragraphs","images","contentItems","forEach","image","position","findIndex","item","order","push","type","splice","style","styles","articleContainer","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","src","image_url","alt","map","index","paragraph_text","paragraph","_id","_c","propTypes","string","isRequired","shape","arrayOf","number","ArticlePageRoute","articleData","title_image","_c2","$RefreshReg$"],"sources":["/Users/rajeevkumar/Desktop/news/client/src/Componets/Other/NewsAriticalPage.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ArticlePage = ({ title, titleImage, paragraphs, images }) => {\n  // Combine paragraphs and images into a single array\n  let contentItems = [...paragraphs];\n  images.forEach(image => {\n    // Find the position where the image should be inserted\n    let position = contentItems.findIndex(item => item.order > image.order);\n    if (position === -1) {\n      // If no such position exists, push to the end\n      contentItems.push({\n        ...image,\n        type: 'image'\n      });\n    } else {\n      // Otherwise, splice the image into the correct position\n      contentItems.splice(position, 0, {\n        ...image,\n        type: 'image'\n      });\n    }\n  });\n\n  return (\n    <article style={styles.articleContainer}>\n      <h1 style={styles.heading}>{title}</h1>\n      {titleImage && (\n        <img\n          style={styles.image}\n          src={titleImage.image_url}\n          alt=\"Title visual representation\"\n        />\n      )}\n      {contentItems.map((item, index) => {\n        if (item.paragraph_text) {\n          return (\n            <p key={item._id} style={styles.paragraph}>\n              {item.paragraph_text}\n            </p>\n          );\n        } else if (item.image_url) {\n          return (\n            <img\n              key={item._id}\n              style={styles.image}\n              src={item.image_url}\n              alt={`Content image ${index + 1}`}\n            />\n          );\n        } else {\n          return null;\n        }\n      })}\n    </article>\n  );\n};\n\n// Styles should be defined here as in your initial setup\n\nArticlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n  titleImage: PropTypes.shape({\n    image_url: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired,\n  }).isRequired,\n  paragraphs: PropTypes.arrayOf(\n    PropTypes.shape({\n      paragraph_text: PropTypes.string.isRequired,\n      order: PropTypes.number.isRequired,\n      _id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      image_url: PropTypes.string.isRequired,\n      order: PropTypes.number.isRequired,\n      _id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\n// Example usage\nconst ArticlePageRoute = () => {\n  // Fetch articleData from the database or state management\n\n  return (\n    <div>\n      <ArticlePage\n        title={articleData.title}\n        titleImage={articleData.title_image}\n        paragraphs={articleData.paragraphs}\n        images={articleData.images}\n      />\n    </div>\n  );\n};\n\nexport default ArticlePageRoute;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}