{"ast":null,"code":"var _jsxFileName = \"/Users/rajeevkumar/Desktop/news/client/src/Componets/MobaileScreen/NewsMobaileCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../../css/MobaileScreenCard.css\"; // Ensure this CSS file exists and styles your cards appropriately\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  id,\n  imageSrc,\n  title,\n  content,\n  time,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => onClick(id),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"Card\",\n      className: \"card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nconst NewsMobileCard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/content\", {\n          method: \"GET\",\n          headers: {\n            \"Cache-Control\": \"no-cache\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setNews(data);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n    fetchNews();\n  }, []);\n  const navigate = useNavigate();\n  const handleClick = id => {\n    navigate(`/details/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: news.map((item, index) => {\n      var _item$images, _item$images$, _item$paragraphs, _item$paragraphs$;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        imageSrc: ((_item$images = item.images) === null || _item$images === void 0 ? void 0 : (_item$images$ = _item$images[0]) === null || _item$images$ === void 0 ? void 0 : _item$images$.image_url) || 'https://via.placeholder.com/150' // Fallback to a placeholder if no image\n        ,\n        title: item.title,\n        content: ((_item$paragraphs = item.paragraphs) === null || _item$paragraphs === void 0 ? void 0 : (_item$paragraphs$ = _item$paragraphs[0]) === null || _item$paragraphs$ === void 0 ? void 0 : _item$paragraphs$.paragraph_text) || 'No content available.' // Use the first paragraph as content\n        ,\n        time: \"Just now\" // Placeholder time, adjust as necessary\n        ,\n        onClick: handleClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsMobileCard, \"5a4Ji7xXF4CuS3/lQ5yZhuDX7RM=\", false, function () {\n  return [useNavigate];\n});\n_c2 = NewsMobileCard;\nexport default NewsMobileCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"NewsMobileCard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Card","id","imageSrc","title","content","time","onClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","NewsMobileCard","_s","news","setNews","fetchNews","response","fetch","method","headers","ok","Error","data","json","error","console","navigate","handleClick","map","item","index","_item$images","_item$images$","_item$paragraphs","_item$paragraphs$","images","image_url","paragraphs","paragraph_text","_c2","$RefreshReg$"],"sources":["/Users/rajeevkumar/Desktop/news/client/src/Componets/MobaileScreen/NewsMobaileCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../css/MobaileScreenCard.css\"; // Ensure this CSS file exists and styles your cards appropriately\nimport { useNavigate } from 'react-router-dom';\nconst Card = ({id, imageSrc, title, content, time,onClick }) => {\n  return (\n    <div className=\"card\" onClick={() => onClick(id)}>\n      <img src={imageSrc} alt=\"Card\" className=\"card-image\" />\n      <div className=\"card-content\">\n        <h1 className=\"card-title\">{title}</h1>\n        <p className=\"card-text\">{content}</p>\n        <div className=\"card-footer\">\n          <span className=\"time\">{time}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst NewsMobileCard = () => {\n  const [news, setNews] = useState([]);\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/content\", {\n          method: \"GET\",\n          headers: {\n            \"Cache-Control\": \"no-cache\",\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setNews(data);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n\n    fetchNews();\n  }, []);\n  const navigate = useNavigate();\n\n  const handleClick = (id) => {\n    navigate(`/details/${id}`);\n  };\n\n  return (\n    <div className=\"card-container\">\n      {news.map((item, index) => (\n        <Card\n          key={index}\n          imageSrc={item.images?.[0]?.image_url || 'https://via.placeholder.com/150'} // Fallback to a placeholder if no image\n          title={item.title}\n          content={item.paragraphs?.[0]?.paragraph_text || 'No content available.'} // Use the first paragraph as content\n          time=\"Just now\" // Placeholder time, adjust as necessary\n          onClick={handleClick(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default NewsMobileCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}